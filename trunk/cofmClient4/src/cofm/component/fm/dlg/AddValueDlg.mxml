<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="400" height="300"
			   title="{RS.m_cv_title}">
	<s:states>
		<s:State name="AddString"/>
		<s:State name="AddText"/>
		<s:State name="AddNumber"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import cofm.command.*;
			import cofm.event.*;
			import cofm.model.*;
			import cofm.util.*;
			
			import mx.collections.XMLListCollection;
			
			import mx.managers.PopUpManager;
			
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			
			private var _attrId: String;
			
			[Bindable] 
			public function set attrId(a: String): void {
				_attrId = a;
				var attrDef: XML = Model.instance().getAttrDefById(
					CurrentFeature.instance().element, _attrId);
				if (attrDef != null) {
					changeForm(attrDef);
					attrInput.text = attrDef.@name;
				}
			}
			
			public function get attrId(): String {
				return _attrId;
			}
			
			private function changeForm(a: Object): void {
				switch (String(a.@type)) {
					case Cst.ATTR_TYPE_TEXT:
						currentState = "AddText";
						break;
					case Cst.ATTR_TYPE_NUMBER:
						currentState = "AddNumber";
						numInfo.text = a.min.text().toString() +
						" - " + a.max.text().toString() + 
						" (" + a.unit.text().toString() + ")";
						break;
					default:
						currentState = "AddString";
						break;
				} 
			}
			
			private function doAddValue(): void {
				//TODO: validate
				var val: String;
				if (this.currentState == "AddText") {
					val = textVal.text;
				} else {
					val = strVal.text;
				}
				val = StringUtil.trim(val);
				
				new VoteAddValueCommand(
					int(this.attrId),
					val, 
					CurrentFeature.instance().id).execute();
				doClose();
			}
			
			private function doClose(): void {
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	
	<mx:Form>
		<mx:FormItem label="{RS.m_cv_attr}">
			<s:TextInput id="attrInput" editable="false" />
		</mx:FormItem>
		<mx:FormItem label="{RS.m_cv_value}">
			
			<!-- The input for String-typed & Numeric attributes -->
			<s:TextInput id="strVal" includeIn="AddString, AddNumber"/>
			
			<!-- The input for Text-typed attributes -->
			<s:TextArea id="textVal" includeIn="AddText"/>
			
			<!-- The prompt for number unit, min and max values -->
			<s:Label id="numInfo" includeIn="AddNumber"/>
		</mx:FormItem>
		<mx:FormItem direction="horizontal">
			<s:Button label="{RS.ok}" click="doAddValue();"/>
			<s:Button label="{RS.close}" click="doClose();"/>
		</mx:FormItem>
	</mx:Form>
</s:TitleWindow>
