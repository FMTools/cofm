<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import cofm.util.*;
			import cofm.command.*;
			import cofm.model.*;
			import cofm.event.*;
			
			import mx.utils.StringUtil;
			
			import spark.utils.TextFlowUtil;
			
			private function initView(): void {
				ClientEvtDispatcher.instance().addEventListener(
					AddCommentEvent.SUCCESS, onCommentAdded);
				ClientEvtDispatcher.instance().addEventListener(
					FeatureSelectEvent.FEATURE_SELECTED, onFeatureSelected);
			}
			
			private function onFeatureSelected(evt: FeatureSelectEvent): void {
				viewer.text = "";
				var f: XML = Model.instance().getEntityById(String(evt.id));
				if (f != null) {
					for each (var c: Object in f.comments.comment) {
						viewer.textFlow = TextFlowUtil.importFromString(
							formatComment(int(c.@creator), c.@time, XML(c).text().toString()));
					}
				}
			}
			
			private function onCommentAdded(evt: AddCommentEvent): void {
				if (CurrentFeature.instance().id != evt.feature) {
					return;
				}
				
				viewer.textFlow.addChildAt(0, TextFlowUtil.importFromString(
					formatComment(evt.user, evt.time, evt.content)));
			}
			
			private function formatComment(user: int, time: String, content: String): String {
				var uName: String = UserList.instance().getNameById(user);
				return "<font color=\"#0000FF\">" + uName + "    " + time + "</font><br/>" +
					"    " + content + "<br/>";
			}
			
			private function submit(): void {
				if (StringUtil.trim(editor.text) != "") {
					new AddCommentCommand(CurrentFeature.instance().id, editor.text).execute();
					reset();
				}
			}
			
			private function reset(): void {
				editor.text = "";
			}
		]]>
	</fx:Script>
	
	<s:TextArea id="viewer" editable="false" height="100%" width="{Size.COMMENT_W}" />
	<s:VGroup width="100%" height="100%">
		<s:Label text="{RS.m_comment_intro}" paddingBottom="2"/>
		<s:TextArea id="editor" width="{Size.COMMENT_EDITOR_W}" height="{Size.COMMENT_EDITOR_H}" />
		<s:HGroup>
			<s:Button label="{RS.ok}" click="submit();" fontSize="10"/>
			<s:Button label="{RS.reset}" click="reset();" fontSize="10"/>
		</s:HGroup>
	</s:VGroup>
	
	
	
</s:HGroup>
