<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	 xmlns:r="collab.fm.client.ui.renderer.*" width="700" height="700"
	 creationComplete="initView()"
	 initialize="initData()" xmlns:view="collab.fm.client.ui.view.*">
	
	<!-- There're 2 lists in this view.
	     On the up side, a 'My Models' Tile-List will display my models with big image and short information.
	     Below my models, a vertical list will display all other models with small image (at the left) and 
	   detailed information.
	     But, if the user didn't login, we show ONLY the "other models" list because at that time there's no 'my'.
	     Use event listener to handle LoginEvent.
	     
	     And becaus
	     e we need to show contributors' name, so we also need a "listuser" command in ModelList
    -->
    <mx:TileList id="mine" width="100%" height="200" dataProvider="{ModelCollection.instance.my}"
    	 columnCount="4" columnWidth="200"
    	 includeInLayout="{User.instance.isLogin}" visible="{User.instance.isLogin}">
    	<mx:itemRenderer>
    		<mx:Component>
    			<mx:VBox horizontalAlign="center" width="100" height="120">
    				<mx:Image width="80" height="80" source="{imgCls}" />
    				<mx:Label text="{XML(data).@name}" fontWeight="bold" fontSize="12"/>
    				<mx:HBox>
    					<mx:Label text="{RS.M_LIST_USERS}" paddingRight="0"/>
    					<mx:Label text="{XML(data).@userNum}" />	
    				</mx:HBox>
    				<mx:Script>
    				<![CDATA[
    					import collab.fm.client.util.RS;
    					
    					[Embed(source="structure.png")]
           				[Bindable]
            			private var imgCls:Class;
    				]]>
    				</mx:Script>
    			</mx:VBox>	
    		</mx:Component>
    	</mx:itemRenderer>
    </mx:TileList>
    
    <view:ModelSearchAndCreateForm id="msac"/>
    
    <mx:Label id="summary"/>
    <mx:List id="others" width="100%" height="100%" dataProvider="{ModelCollection.instance.others}"
    	 variableRowHeight="true" wordWrap="true">
    	 <mx:itemRenderer>
    	 	<mx:Component>
    	 		<mx:HBox creationComplete="initView()" borderStyle="solid"
    	 			 width="100%" height="100%"
    	 			 verticalScrollPolicy="off">
    	 			<mx:Image width="50" height="50" source="structure.png" />
					<mx:VBox height="100%" width="100%">
						<mx:Label text="{XML(data).@name}" fontWeight="bold" fontSize="12"/>
						<mx:HBox verticalAlign="top">
							<mx:Label text="{RS.M_LIST_USERS}"/>
							<mx:Repeater id="rep" dataProvider="{XML(data).users.user}" count="{MAX_DISPLAYED_USER_COUNT}">
								<mx:Label text="{rep.currentItem}" />
							</mx:Repeater>	
							<mx:Label id="userAppender"/>
						</mx:HBox>
						<mx:Text selectable="false"
							 text="{XML(data).des}" textIndent="25"
							 width="100%" height="100%"/>		
					</mx:VBox>
					<mx:Script>
    				<![CDATA[
    					import collab.fm.client.util.RS;
    					
    					private static const MAX_DISPLAYED_USER_COUNT: int = 5; // how many users we should display
    					
    					private function initView(): void {
    						var total: int = XMLList(data.user.user).length();
    						if (total > MAX_DISPLAYED_USER_COUNT) {
    							userAppender.text = "...(and " + (total-MAX_DISPLAYED_USER_COUNT) + " more)";
    						}
    					}
    				]]>
    				</mx:Script>
    	 		</mx:HBox>
    	 	</mx:Component>
    	 </mx:itemRenderer>
    </mx:List>  
    
    <mx:Script>
    	<![CDATA[
    		import mx.collections.XMLListCollection;
    		import collab.fm.client.data.*;
    		import collab.fm.client.util.*;
    		import collab.fm.client.event.*;
    		
    		public function callOnLoginOK(): void {
    		}
    		
    		public function callOnListModelOK(): void {
    			refreshSummary();
    		}
    		private function initView(): void {
    			trace("Model List View inited.");
    			refreshSummary();
    			this.addEventListener(SearchModelEvent.SUCCESS, doSearchOK);
    		}
    		
    		private function refreshSummary(): void {
    			summary.text = RS.format(RS.M_LIST_SUMMARY, [ModelCollection.instance.others.length]);
    		}
    		
    		private function initData(): void {
    		}
    		
    		private function doSearchOK(evt: SearchModelEvent): void {
    			refreshSummary();
    		}
    	]]>
    </mx:Script>
</mx:VBox>
