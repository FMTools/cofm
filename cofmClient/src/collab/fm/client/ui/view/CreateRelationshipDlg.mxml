<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="400" height="350"
	 xmlns:a="com.hillelcoren.components.*"
	 title="{RS.REL_CREATE_TITLE}"
	 showCloseButton="true"
	 close="onClose();">
	<mx:VBox>
		<mx:HBox>
			<mx:Label text="{RS.REL_CREATE_TYPE}"/>
			<mx:ComboBox change="onSelectRelType(event);">
				<mx:ArrayCollection>
					<mx:Object label="{RS.REL_TYPE_REFINEMENT}" typeName="{Cst.BIN_REL_REFINES}"/>
					<mx:Object label="{RS.REL_TYPE_EXCLUDE}" typeName="{Cst.BIN_REL_EXCLUDES}"/>
					<mx:Object label="{RS.REL_TYPE_REQUIRE}" typeName="{Cst.BIN_REL_REQUIRES}"/>
				</mx:ArrayCollection>
			</mx:ComboBox>
		</mx:HBox>
				
			
		<mx:Form id="binary">
			<mx:FormItem id="leftItem" label="{RS.REL_CREATE_PARENT}">
				<a:AutoComplete id="leftFeature" allowMultipleSelection="false"
					 allowNewValues="false" matchType="word" selectedItemStyleName="none" width="150"
					 labelField="name"
					 dataProvider="{FeatureNameList.instance.data}"
					 activate="onInputFeature();"
					 click="onInputFeature();"
					 valueCommit="onInputLeft();"
					 prompt="{RS.REL_CREATE_ENTER_PROMPT}"/>
			</mx:FormItem>
			
			<mx:FormItem id="rightItem" label="{RS.REL_CREATE_CHILD}">
				<a:AutoComplete id="rightFeature" allowMultipleSelection="false"
					 allowNewValues="false" matchType="word" selectedItemStyleName="none" width="150"
					 labelField="name"
					 dataProvider="{FeatureNameList.instance.data}"
					 activate="onInputFeature();"
					 click="onInputFeature();"
					 valueCommit="onInputRight();"
					 prompt="{RS.REL_CREATE_ENTER_PROMPT}"/>
			</mx:FormItem>
			
			<mx:FormItem direction="horizontal">
				<mx:Button id="cOK" label="{RS.BTN_OK}" click="endCreateRel();"/>
				<mx:Button label="{RS.BTN_CANCEL}" click="onClose();"/>
			</mx:FormItem>	
		</mx:Form>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import mx.events.ItemClickEvent;
			
			import collab.fm.client.command.*;
			import collab.fm.client.util.*;
			import collab.fm.client.data.*;
			import collab.fm.client.event.*;
			
			private var relType: String = Cst.BIN_REL_REFINES;
			private var left: int;
			private var right: int;
			
		
			private function onClose(): void {
				PopUpManager.removePopUp(this);
			}
			
			private function endCreateRel(): void {
				onClose();
				if (relType == Cst.BIN_REL_REFINES || relType == Cst.BIN_REL_EXCLUDES
					|| relType == Cst.BIN_REL_REQUIRES) {
					new CreateOrVoteBinaryRelationshipCommand(relType, left, right).execute();
				}
			}
			
			private function onSelectRelType(evt: Event): void {
				relType = evt.currentTarget.selectedItem.typeName;
				if (relType == Cst.BIN_REL_REFINES) {
					leftItem.label = RS.REL_CREATE_PARENT;
					rightItem.label = RS.REL_CREATE_CHILD;
				} else if (relType == Cst.BIN_REL_EXCLUDES || relType == Cst.BIN_REL_REQUIRES) {
					leftItem.label = RS.REL_CREATE_LEFT;
					rightItem.label = RS.REL_CREATE_RIGHT;
				}
			}
			
			private function onInputFeature(): void {
				cOK.enabled = false;
			}
			
			private function onInputLeft(): void {
				if (!leftFeature.selectedItem) {
					left= -1;
					cOK.enabled = false;
				} else {
					left = leftFeature.selectedItem["id"];
					if (right >= 0 && left != right) {
						cOK.enabled = true;
					} else {
						cOK.enabled = false;
					}
				}
			}
			
			private function onInputRight(): void {
				if (!rightFeature.selectedItem) {
					right= -1;
					cOK.enabled = false;
				} else {
					right = rightFeature.selectedItem["id"];
					if (left >= 0 && left != right) {
						cOK.enabled = true;
					} else {
						cOK.enabled = false;
					}
				}
			}
			
		]]>
	</mx:Script>
	
</mx:TitleWindow>

