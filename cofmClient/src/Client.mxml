<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:p="collab.fm.client.ui.perspective.*" 
	xmlns:v="collab.fm.client.ui.view.*"
	layout="absolute" minWidth="900" minHeight="500"
    width="1000" height="800" backgroundColor="white"
    creationComplete="initView()">
	<mx:Style>
    Tree {
        folderClosedIcon: ClassReference(null);
        folderOpenIcon: ClassReference(null);
        defaultLeafIcon: ClassReference(null);
    }
	</mx:Style>
	<mx:VBox id="appContainer" width="100%" height="100%">
		
		<mx:ApplicationControlBar id="appCB" width="100%" height="30">
			<mx:LinkButton paddingLeft="0" paddingRight="0" label="{RS.BTN_FEEDBACK}" click="gotoFeedback();" />
			<mx:Spacer />
			<mx:LinkButton label="{RS.BTN_BACK_TO_HOME}" click="gotoHomePage();" id="btnBack" />
			<mx:Spacer />
			<mx:Label id="modelName" />
			<v:MessageBar width="300"/>
		</mx:ApplicationControlBar>
		
		<p:EntryPerspective id="entry" width="100%" height="100%">
			
		</p:EntryPerspective>
		
		<p:WorkPerspective id="work" width="100%" height="100%">
			
		</p:WorkPerspective>
	
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			import collab.fm.client.ui.view.ModelSearchAndCreateForm;
			import collab.fm.client.event.*;
			import collab.fm.client.util.*;
			import collab.fm.client.data.*;
			
			private function initView(): void {
				UIUtil.show(work, false);
				UIUtil.show(btnBack, false);
				ClientEvtDispatcher.instance().addEventListener(ModelSelectEvent.SELECTED, onModelSelect);
				ClientEvtDispatcher.instance().addEventListener(ModelUpdateEvent.WORKING_VIEW_COMPLETE, onWorkingViewComplete);
				initData();
			}
			
			private function initData(): void {
				FeatureNameList.instance.data;
			}
			
			private function gotoHomePage(): void {
				UIUtil.show(btnBack, false);
				UIUtil.show(work, false);
				UIUtil.show(entry, true);
				ModelCollection.instance.currentModelId = -1;
				modelName.text = "";
			}
			
			private function onModelSelect(evt: ModelSelectEvent): void {
				UIUtil.show(entry, false);
				work.initData(evt.modelId);
				var mName: String = ModelCollection.instance.getModelNameById(evt.modelId);
				modelName.text = RS.M_LIST_CURRENT_NAME + ": " + mName;
			}
			
			private function onWorkingViewComplete(evt: ModelUpdateEvent): void {
				UIUtil.show(work, true);
				UIUtil.show(btnBack, true);
			}
			
			private function gotoFeedback(): void {
				navigateToURL(new URLRequest(
					"http://code.google.com/p/cofm/issues/list"), "_blank");
			}
			
		]]>
	</mx:Script>

</mx:Application>
