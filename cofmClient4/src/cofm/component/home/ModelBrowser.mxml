<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
					  creationComplete="initView();">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import cofm.event.*;
			import cofm.model.*;
			import cofm.util.*;
			
			import mx.collections.XMLListCollection;
			import mx.utils.StringUtil;
			
			private function initView(): void {
				ClientEvtDispatcher.instance().addEventListener(ModelSearchEvent.SUCCESS, onModelSearch);
			}
			
			public function onModelSearch(evt: ModelSearchEvent): void {
				summary.text = StringUtil.substitute(RS.fmlist_summary, String(evt.result.length));
			}
			
			
		]]>
	</fx:Script>

	<s:Label id="summary"/>
	<s:List id="mlist" width="100%" height="100%" dataProvider="{ModelCollection.instance().models}">
		<s:layout>
			<s:VerticalLayout variableRowHeight="true"/>
		</s:layout>
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer creationComplete="initView();" dataChange="initView();">
					<fx:Script>
						<![CDATA[
							import cofm.event.*;
							import cofm.model.*;
							import cofm.util.*;
							
							import mx.collections.XMLListCollection;
							import mx.events.FlexEvent;
							
							[Embed(source="default-icon.png")]
							[Bindable] private var imgCls: Class;
							
							[Bindable] private var modelInfo: ModelInfo = new ModelInfo();
							
							private static const MAX_DISPLAYED_USER_COUNT: int = 10; // how many users we should display
							
							private function initView(): void {
								if (data == null) {
									return;
								}
								
								// Do data biding
								modelInfo = new ModelInfo();
								modelInfo.description = String(data.des);
								modelInfo.name = String(data.@name);
								modelInfo.id = int(data.@id);
								modelInfo.users = new XMLListCollection(data.users.user);
								
								var total: int = modelInfo.users.length;
								if (total > MAX_DISPLAYED_USER_COUNT) {
									userAppender.text = "...(and " + (total-MAX_DISPLAYED_USER_COUNT) + " more)";
								}
							}
							
							private function doSelectModel(): void {
								trace("Selected " + modelInfo.id + ": " + modelInfo.name);
								/*
								var modelId: int = int(data.@id);
								ClientEvtDispatcher.instance().dispatchEvent(
								new ModelSelectEvent(ModelSelectEvent.SELECTED, modelId, 
								ModelCollection.instance.getModelNameById(modelId)));
								*/
							}
						]]>
					</fx:Script>
					
					<s:states>
						<s:State name="normal" />
						<s:State name="hovered" />
						<s:State name="selected" />
					</s:states>
					
					<s:layout>
						<s:HorizontalLayout />
					</s:layout>
					
					<mx:Image width="{Size.MODEL_LIST_IMAGE_W}" height="{Size.MODEL_LIST_IMAGE_H}" 
							  source="{imgCls}" />
					<s:VGroup>
						<s:HGroup>
							<s:Label text="{modelInfo.name}" fontWeight="bold" fontSize="12" />
							<s:Button label="{RS.fmlist_enter}" 
									  visible="{UserList.instance().isLogin}"
									  click="doSelectModel();"/>
						</s:HGroup>
						<s:HGroup>
							<s:Label text="{RS.fmlist_users}"/>
							<mx:HBox>
								<mx:Repeater id="rep" dataProvider="{modelInfo.users}" 
											 count="{MAX_DISPLAYED_USER_COUNT}">
									<s:Label text="{rep.currentItem}"/>
								</mx:Repeater>
							</mx:HBox>
							<s:Label id="userAppender"/>
						</s:HGroup>
						<s:Label text="{modelInfo.description}"/>
					</s:VGroup>
				</s:ItemRenderer>
			</fx:Component>
		</s:itemRenderer>
		
	</s:List> 
</s:SkinnableContainer>
